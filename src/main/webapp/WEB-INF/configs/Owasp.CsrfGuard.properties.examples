# The OWASP CSRFGuard Project, BSD License
# 
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of OWASP nor the names of its contributors may be used
#    to endorse or promote products derived from this software without specific
#    prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Logger
#
# The logger property (org.owasp.csrfguard.Logger) defines the qualified class name of 
# the object responsible for processing all log messages produced by CSRFGuard. The default
# CSRFGuard logger is org.owasp.csrfguard.log.ConsoleLogger. This class logs all messages
# to System.out which JavaEE application servers redirect to a vendor specific log file.
# Developers can customize the logging behavior of CSRFGuard by implementing the
# org.owasp.csrfguard.log.ILogger interface and setting the logger property to the new
# logger's qualified class name. The following configuration snippet instructs OWASP CSRFGuard
# to capture all log messages to the console:
#
# org.owasp.csrfguard.Logger=org.owasp.csrfguard.log.ConsoleLogger
org.owasp.csrfguard.Logger=org.owasp.csrfguard.log.JavaLogger

org.owasp.csrfguard.configuration.provider.factory = org.owasp.csrfguard.config.PropertiesConfigurationProviderFactory

# New Token Landing Page
#
# The new token landing page property (org.owasp.csrfguard.NewTokenLandingPage) defines where
# to send a user if the token is being generated for the first time, and the use new token landing
# page boolean property (org.owasp.csrfguard.UseNewTokenLandingPage) determines if any redirect happens.
# UseNewTokenLandingPage defaults to false if NewTokenLandingPage is not specified, and to true
# if it is specified.. If UseNewTokenLandingPage is set true then this request is generated
# using auto-posting forms and will only contain the CSRF prevention token parameter, if
# applicable. All query-string or form parameters sent with the original request will be
# discarded. If this property is not defined, CSRFGuard will instead auto-post the user to the
# original context and servlet path. The following configuration snippet instructs OWASP CSRFGuard to
# redirect the user to /index.html when the user visits a protected resource
# without having a corresponding CSRF token present in the HttpSession object:
#

#org.owasp.csrfguard.NewTokenLandingPage= /rgsa/welcome.do

#org.owasp.csrfguard.NewTokenLandingPage=/rgsa

# Protected Methods
#
# The protected methods property (org.owasp.csrfguard.ProtectedMethods) defines a comma
# separated list of HTTP request methods that should be protected by CSRFGuard. The default
# list is an empty list which will cause all HTTP methods to be protected, thus preserving
# legacy behavior. This setting allows the user to inform CSRFGuard that only requests of the
# given types should be considered for protection. All HTTP mehtods not in the list will be
# considered safe (i.e. view only / unable to modify data). This should be used only when the
# user has concrete knowledge that all requests made via methods not in the list
# are safe (i.e. do not apply an action to any data) since it can actually introduce new
# security vulnerabilities. For example: the user thinks that all actionable requests are
# only available by POST requests when in fact some are available via GET requests. If the
# user has excluded GET requests from the list then they have introduced a vulnerability.
# The following configuration snippet instructs OWASP CSRFGuard to protect only the POST,
# PUT, and DELETE HTTP methods.
#
# org.owasp.csrfguard.ProtectedMethods=POST,PUT,DELETE

# Unique Per-Page Tokens
#
# The unique token per-page property (org.owasp.csrfguard.TokenPerPage) is a boolean value that
# determines if CSRFGuard should make use of unique per-page (i.e. URI) prevention tokens as
# opposed to unique per-session prevention tokens. When a user requests a protected resource,
# CSRFGuard will determine if a page specific token has been previously generated. If a page
# specific token has not yet been previously generated, CSRFGuard will verify the request was
# submitted with the per-session token intact. After verifying the presence of the per-session token,
# CSRFGuard will create a page specific token that is required for all subsequent requests to the
# associated resource. The per-session CSRF token can only be used when requesting a resource for
# the first time. All subsequent requests must have the per-page token intact or the request will
# be treated as a CSRF attack. This behavior can be changed with the org.owasp.csrfguard.TokenPerPagePrecreate
# property. Enabling this property will make CSRFGuard calculate the per page token prior to a first
# visit. This option only works with JSTL token injection and is useful for preserving the validity of
# links if the user pushes the back button. There may be a performance impact when enabling this option
# if the .jsp has a large number of proctected links that need tokens to be calculated.
# Use of the unique token per page property is currently experimental
# but provides a significant amount of improved security. Consider the exposure of a CSRF token using
# the legacy unique per-session model. Exposure of this token facilitates the attacker's ability to
# carry out a CSRF attack against the victim's active session for any resource exposed by the web
# application. Now consider the exposure of a CSRF token using the experimental unique token per-page
# model. Exposure of this token would only allow the attacker to carry out a CSRF attack against the
# victim's active session for a small subset of resources exposed by the web application. Use of the
# unique token per-page property is a strong defense in depth strategy significantly reducing the
# impact of exposed CSRF prevention tokens. The following configuration snippet instructs OWASP
# CSRFGuard to utilize the unique token per-page model:
#
#org.owasp.csrfguard.TokenPerPage=true
# org.owasp.csrfguard.TokenPerPagePrecreate=false
#org.owasp.csrfguard.TokenPerPage=true
#org.owasp.csrfguard.TokenPerPagePrecreate=false

# Token Rotation
#
# The rotate token property (org.owasp.csrfguard.Rotate) is a boolean value that determines if
# CSRFGuard should generate and utilize a new token after verifying the previous token. Rotation
# helps minimize the window of opportunity an attacker has to leverage the victim's stolen token
# in a targeted CSRF attack. However, this functionality generally causes navigation problems in
# most applications. Specifically, the 'Back' button in the browser will often cease to function
# properly. When a user hits the 'Back' button and interacts with the HTML, the browser may submit
# an old token causing CSRFGuard to incorrectly believe this request is a CSRF attack in progress
# (i.e. a 'false positive'). Users can prevent this scenario by preventing the caching of HTML pages
# containing FORM submissions using the cache-control header. However, this may also introduce
# performance problems as the browser will have to request HTML on a more frequent basis. The following
# configuration snippet enables token rotation:
#
 #org.owasp.csrfguard.Rotate=false

# Ajax and XMLHttpRequest Support
#
# The Ajax property (org.owasp.csrfguard.Ajax) is a boolean value that indicates whether or not OWASP
# CSRFGuard should support the injection and verification of unique per-session prevention tokens for
# XMLHttpRequests. To leverage Ajax support, the user must not only set this property to true but must
# also reference the JavaScript DOM Manipulation code using a script element. This dynamic script will
# override the send method of the XMLHttpRequest object to ensure the submission of an X-Requested-With
# header name value pair coupled with the submission of a custom header name value pair for each request.
# The name of the custom header is the value of the token name property and the value of the header is
# always the unique per-session token value. This custom header is analogous to the HTTP parameter name
# value pairs submitted via traditional GET and POST requests. If the X-Requested-With header was sent
# in the HTTP request, then CSRFGuard will look for the presence and ensure the validity of the unique
# per-session token in the custom header name value pair. Note that verification of these headers takes
# precedence over verification of the CSRF token supplied as an HTTP parameter. More specifically,
# CSRFGuard does not verify the presence of the CSRF token if the Ajax support property is enabled and
# the corresponding X-Requested-With and custom headers are embedded within the request. The following
# configuration snippet instructs OWASP CSRFGuard to support Ajax requests by verifying the presence and
# correctness of the X-Requested-With and custom headers:
#
# org.owasp.csrfguard.Ajax=true
org.owasp.csrfguard.Ajax=true

# The default behavior of CSRFGuard is to protect all pages. Pages marked as unprotected will not be protected.
# If the Protect property is enabled, this behavior is reversed. Pages must be marked as protected to be protected.
# All other pages will not be protected. This is useful when the CsrfGuardFilter is aggressively mapped (ex: /*),
# but you only want to protect a few pages.
#
# org.owasp.csrfguard.Protect=true

# Unprotected Pages:
#
# The unprotected pages property (org.owasp.csrfguard.unprotected.*) defines a series of pages that
# should not be protected by CSRFGuard. Such configurations are useful when the CsrfGuardFilter is
# aggressively mapped (ex: /*). The syntax of the property name is org.owasp.csrfguard.unprotected.[PageName],
# where PageName is some arbitrary identifier that can be used to reference a resource. The syntax of
# defining the uri of unprotected pages is the same as the syntax used by the JavaEE container for uri mapping.
# Specifically, CSRFGuard will identify the first match (if any) between the requested uri and an unprotected
# page in order of declaration. Match criteria is as follows:
#
# Case 1: exact match between request uri and unprotected page
# Case 2: longest path prefix match, beginning / and ending /*
# Case 3: extension match, beginning *.
# Default: requested resource must be validated by CSRFGuard
#
# The following code snippet illustrates the three use cases over four examples. The first two examples
# (Tag and JavaScriptServlet) look for direct URI matches. The third example (Html) looks for all resources
# ending in a .html extension. The last example (Public) looks for all resources prefixed with the URI path /MySite/Public/*.
#


# org.owasp.csrfguard.unprotected.Htdfdfgmhjml=/rgsa/

org.owasp.csrfguard.unprotected.unprotectedResource=/rgsa/resources/*

org.owasp.csrfguard.unprotected.welcome=/rgsa/index.html
org.owasp.csrfguard.unprotected.home=/rgsa/home.html
org.owasp.csrfguard.unprotected.login=/rgsa/login.html
org.owasp.csrfguard.unprotected.logout=/rgsa/logout.html
org.owasp.csrfguard.unprotected.basicinfo=/rgsa/basicinfo.html
org.owasp.csrfguard.unprotected.managebasicInfoDetails=/rgsa/managebasicInfoDetails.html
org.owasp.csrfguard.unprotected.viewBasicInfoDetails=/rgsa/viewBasicInfoDetails.html
org.owasp.csrfguard.unprotected.updateBasicInfoDetails=/rgsa/updateBasicInfoDetails.html
org.owasp.csrfguard.unprotected.freezeBasicInfoDetails=/rgsa/freezeBasicInfoDetails.html
org.owasp.csrfguard.unprotected.essentialConditions=/rgsa/essentialConditions.html
org.owasp.csrfguard.unprotected.statusAdminTechStaff=/rgsa/statusAdminTechStaff.html
org.owasp.csrfguard.unprotected.managesubjects=/rgsa/managesubjects.html
org.owasp.csrfguard.unprotected.addsubjects=/rgsa/addsubjects.html
org.owasp.csrfguard.unprotected.categorySubcategory=/rgsa/categorySubcategory.html
org.owasp.csrfguard.unprotected.adminTechsupportStaff=/rgsa/adminTechsupportStaff.html
org.owasp.csrfguard.unprotected.adminTechsupportStaffForMOPR=/rgsa/adminTechsupportStaffForMOPR.html
org.owasp.csrfguard.unprotected.manageEssentialConditions=/rgsa/manageEssentialConditions.html
org.owasp.csrfguard.unprotected.traininginfrastructure=/rgsa/traininginfrastructure.html
org.owasp.csrfguard.unprotected.capacityBuildingActivityPaln=/rgsa/capacityBuildingActivityPaln.html
org.owasp.csrfguard.unprotected.panchayatbhawan=/rgsa/panchayatbhawan.html
org.owasp.csrfguard.unprotected.addFacultyAndMaintenance=/rgsa/addFacultyAndMaintenance.html
org.owasp.csrfguard.unprotected.institutionaiInfraAndCarryForward=/rgsa/institutionalInfraAndCarryForward.html
org.owasp.csrfguard.unprotected.addFacultyAndMaintenance=/rgsa/addFacultyAndMaintenance.html
org.owasp.csrfguard.unprotected.institutionaiInfraAndCarryForward=/rgsa/institutionalInfraAndCarryForward.html
org.owasp.csrfguard.unprotected.institutionalInfraActivityPlan=/rgsa/institutionalInfraActivityPlan.html
org.owasp.csrfguard.unprotected.statusCurrentUsageSat=/rgsa/statusCurrentUsageSat.html
org.owasp.csrfguard.unprotected.pesaPlan=/rgsa/pesaPlan.html
org.owasp.csrfguard.unprotected.pesaPlanForMOPR=/rgsa/pesaPlanForMOPR.html
org.owasp.csrfguard.unprotected.adminAndFinData=/rgsa/adminAndFinData.html
org.owasp.csrfguard.unprotected.facilityAndMaintainancePmu=/rgsa/facilityAndMaintainancePmu.html
#Innovative Activity
org.owasp.csrfguard.unprotected.innovativeActivity=/rgsa/innovativeActivity.html
org.owasp.csrfguard.unprotected.innovativeActivityDetails=/rgsa/innovativeActivityDetails.html
#Capacity building Add Training
org.owasp.csrfguard.unprotected.cpbaddtraining=/rgsa/cpbaddtraining.html
org.owasp.csrfguard.unprotected.saveCapctyBuldngPln=/rgsa/saveCapctyBuldngPln.html
org.owasp.csrfguard.unprotected.modifyTrainingActivity=/rgsa/modifyTrainingActivity.html
org.owasp.csrfguard.unprotected.deleteTrainingActivity=/rgsa/deleteTrainingActivity.html
org.owasp.csrfguard.unprotected.frzUnfrzTrainingActivity=/rgsa/frzUnfrzTrainingActivity.html
org.owasp.csrfguard.unprotected.planForCapacityBuilding=/rgsa/planForCapacityBuilding.html

org.owasp.csrfguard.unprotected.panchayatbhawan=/rgsa/pmu.html



org.owasp.csrfguard.unprotected.viewEssentialConditions=/rgsa/viewEssentialConditions.html
org.owasp.csrfguard.unprotected.updateEssentialConditions=/rgsa/updateEssentialConditions.html
org.owasp.csrfguard.unprotected.freezeEssentialConditions=/rgsa/freezeEssentialConditions.html
org.owasp.csrfguard.unprotected.incomeEnhancement=/rgsa/incomeEnhancement.html
org.owasp.csrfguard.unprotected.facilityAndMaintainancePmu=/rgsa/facilityAndMaintainancePmu.html
org.owasp.csrfguard.unprotected.statusFacultyMaintenancePmu=/rgsa/statusFacultyMaintenancePmu.html
org.owasp.csrfguard.unprotected.planForCapacityBuilding=/rgsa/planForCapacityBuilding.html
org.owasp.csrfguard.unprotected.capacitybuild=/rgsa/capacitybuild.html
org.owasp.csrfguard.unprotected.iec=/rgsa/iec.html
org.owasp.csrfguard.unprotected.statuspanchayatbhawan=/rgsa/statuspanchayatbhawan.html
org.owasp.csrfguard.unprotected.fetchPostTypeMaster=/rgsa/fetchPostTypeMaster.html
org.owasp.csrfguard.unprotected.fetchAdminTechSupportStaffForMOPRAndState=/rgsa/fetchAdminTechSupportStaffForMOPRAndState.html
org.owasp.csrfguard.unprotected.saveAdminTechStaff=/rgsa/saveAdminTechStaff.html

#Pesa Plan
org.owasp.csrfguard.unprotected.fetchDesignations=/rgsa/fetchPesaPost.html
org.owasp.csrfguard.unprotected.fetchPesaPlanDetailsForStateAndMOPR=/rgsa/fetchPesaPlanDetailsForStateAndMOPR.html
org.owasp.csrfguard.unprotected.fetchPesaDetails=/rgsa/fetchPesaDetails.html
org.owasp.csrfguard.unprotected.savePesaPlan=/rgsa/savePesaPlan.html
org.owasp.csrfguard.unprotected.savePesaPlanForCEC=/rgsa/savePesaPlanForCEC.html
org.owasp.csrfguard.unprotected.feezUnFreezPesaPlan=/rgsa/feezUnFreezPesaPlan.html


org.owasp.csrfguard.unprotected.getPanchayatBhawanActivity=/rgsa/getPanchayatBhawanActivity.html
org.owasp.csrfguard.unprotected.savePanchayatBhawanActivity=/rgsa/savePanchayatBhawanActivity.html


#Admin and tech staff status
org.owasp.csrfguard.unprotected.fetchPostForAdminsAndTechStatus=/rgsa/fetchPostForAdminsAndTechStatus.html
org.owasp.csrfguard.unprotected.saveAdminsAndTechStatus=/rgsa/saveAdminsAndTechStatus.html
org.owasp.csrfguard.unprotected.gramPanchayatList=/rgsa/gramPanchayatList.html
org.owasp.csrfguard.unprotected.freezUnFreezAdminAndTechStaffStatus=/rgsa/freezUnFreezAdminAndTechStaffStatus.html


org.owasp.csrfguard.unprotected.getOnLoadData=/rgsa/getOnLoadData.html
org.owasp.csrfguard.unprotected.saveSatcomFacility=/rgsa/saveSatcomFacility.html


#Capacity Building
org.owasp.csrfguard.unprotected.fetchCBMastersAndCapacityBuildingData=/rgsa/fetchCBMastersAndCapacityBuildingData.html
org.owasp.csrfguard.unprotected.saveCapacityBuildingActivityAndDetails=/rgsa/saveCapacityBuildingActivityAndDetails.html
org.owasp.csrfguard.unprotected.feezUnFreezCapacityBuilding=/rgsa/feezUnFreezCapacityBuilding.html

#Satcom Current Status
org.owasp.csrfguard.unprotected.fetchSatcomMastersAndSatcomStatus=/rgsa/fetchSatcomMastersAndSatcomStatus.html
org.owasp.csrfguard.unprotected.saveSatcomCurrentStatus=/rgsa/saveSatcomCurrentStatus.html
org.owasp.csrfguard.unprotected.freezeUnFreezeSatcomStatus=/rgsa/freezeUnFreezeSatcomStatus.html

#Training Infrastructure
org.owasp.csrfguard.unprotected.fetchDistrictAndBlockFromLGDService=/rgsa/fetchDistrictAndBlockFromLGDService.html


#Training institution
org.owasp.csrfguard.unprotected.fetchStateList=/rgsa/fetchStateList.html
org.owasp.csrfguard.unprotected.fetchDistrictsBasedOnStateCode=/rgsa/fetchDistrictsBasedOnStateCode.html
org.owasp.csrfguard.unprotected.fetchBlocksBasedOnDistrictCode=/rgsa/fetchBlocksBasedOnDistrictCode.html
org.owasp.csrfguard.unprotected.fetchInstituteTypes=/rgsa/fetchInstituteTypes.html
org.owasp.csrfguard.unprotected.fetchTrainingInstituteDetails=/rgsa/fetchTrainingInstituteDetails.html
org.owasp.csrfguard.unprotected.saveInfrastructureDetails=/rgsa/saveInfrastructureDetails.html
org.owasp.csrfguard.unprotected.fetchScheme=/rgsa/fetchScheme.html
org.owasp.csrfguard.unprotected.fetchTrainingInstituteBasedOnFinYearAndStateCode=/rgsa/fetchTrainingInstituteBasedOnFinYearAndStateCode.html
org.owasp.csrfguard.unprotected.deleteTrainingInfrastructureDetails=/rgsa/deleteTrainingInfrastructureDetails.html
org.owasp.csrfguard.unprotected.saveTrainingInstitutionCF=/rgsa/saveTrainingInstitutionCF.html

#Panchyat Bhawan Current Status
org.owasp.csrfguard.unprotected.fetchServicesProvided=/rgsa/fetchServicesProvided.html
org.owasp.csrfguard.unprotected.gramPanchayatListBasedOnBlock=/rgsa/gramPanchayatListBasedOnBlock.html
org.owasp.csrfguard.unprotected.savePanchayatBhawanCsDetails=/rgsa/savePanchayatBhawanCsDetails.html
org.owasp.csrfguard.unprotected.fetchPanchyatBhawanCurrentStatusBasedOnLocalBodySelected=/rgsa/fetchPanchyatBhawanCurrentStatusBasedOnLocalBodySelected.html

#IncomeEnhancement
org.owasp.csrfguard.unprotected.getBlockBasedOnDistrictCode=/rgsa/getBlockBasedOnDistrictCode.html
org.owasp.csrfguard.unprotected.incomeEnhancementAdd=/rgsa/incomeEnhancementAdd.html
org.owasp.csrfguard.unprotected.viewFileOfIncmEnhncmntActivity=/rgsa/viewFileOfIncmEnhncmntActivity.html
org.owasp.csrfguard.unprotected.frzUnfrzIncomeEnhancementActivity=/rgsa/frzUnfrzIncomeEnhancementActivity.html
org.owasp.csrfguard.unprotected.deleteIncomeEnhancementDtls=/rgsa/deleteIncomeEnhancementDtls.html

#Forward Plan
org.owasp.csrfguard.unprotected.forwardPlans=/rgsa/forwardPlans.html

org.owasp.csrfguard.unprotected.getAllSubmittedPlanByState=/rgsa/getAllSubmittedPlanByState.html

org.owasp.csrfguard.unprotected.distanceLearningGetMOPR=/rgsa/distanceLearningGetMOPR.html

org.owasp.csrfguard.unprotected.adminTechQuaderly=/rgsa/adminTechQuaderly.html
org.owasp.csrfguard.unprotected.pesaPlanQuaterly=/rgsa/pesaPlanQuaterly.html
org.owasp.csrfguard.unprotected.fetchQuartExp=/rgsa/fetchQuartExp.html
org.owasp.csrfguard.unprotected.postQuartExp=/rgsa/postQuartExp.html

org.owasp.csrfguard.unprotected.eGovtQuaderly=/rgsa/eGovtQuaderly.html
org.owasp.csrfguard.unprotected.enablementQuaterly=/rgsa/enablementQuaterly.html
org.owasp.csrfguard.unprotected.fetchDetailsForGramPanchayatProgressReport=/rgsa/fetchDetailsForGramPanchayatProgressReport.html

#institutional infra activity plan fetchInstitutionalInfraDataForStateAndMOPR
org.owasp.csrfguard.unprotected.saveInstitutionalInfraActivityPlanDetails=/rgsa/saveInstitutionalInfraActivityPlanDetails.html
org.owasp.csrfguard.unprotected.fetchInstitutionalInfraDataForStateAndMOPR=/rgsa/fetchInstitutionalInfraDataForStateAndMOPR.html
org.owasp.csrfguard.unprotected.feezUnFreezInstitutionalInfraActivityPlan=/rgsa/feezUnFreezInstitutionalInfraActivityPlan.html
org.owasp.csrfguard.unprotected.fetchTrainingInstituteType=/rgsa/fetchTrainingInstituteType.html
org.owasp.csrfguard.unprotected.saveInstitutionalInfraActivityCEC=/rgsa/saveInstitutionalInfraActivityCEC.html

org.owasp.csrfguard.unprotected.adminAndFinancialDataCell=/rgsa/adminAndFinancialDataCell.html

#GIS State wise Plan status 
org.owasp.csrfguard.unprotected.getStatewisePlanStatus=/rgsa/getStatewisePlanStatus.html
org.owasp.csrfguard.unprotected.showGISStatewisePlanDetails=/rgsa/showGISStatewisePlanDetails.html

#Sanction Order
org.owasp.csrfguard.unprotected.allStateList=/rgsa/allStateList.html
org.owasp.csrfguard.unprotected.allFinYearList=/rgsa/allFinYearList.html
org.owasp.csrfguard.unprotected.fetchAllSanctionOrderComponent=/rgsa/fetchAllSanctionOrderComponent.html
org.owasp.csrfguard.unprotected.uploadFiletoServer=/rgsa/uploadFiletoServer.html
org.owasp.csrfguard.unprotected.saveSanctionOrder=/rgsa/saveSanctionOrder.html
org.owasp.csrfguard.unprotected.fetchAllSanctionOrderCompomentAmount=/rgsa/fetchAllSanctionOrderCompomentAmount.html



#TrainingProgressReport
org.owasp.csrfguard.unprotected.trainingProgressReport=/rgsa/trainingProgressReport.html

# Progress Report
org.owasp.csrfguard.unprotected.getPostApproveReport=/rgsa/getPostApproveReport.html
org.owasp.csrfguard.unprotected.postPostApproveReport=/rgsa/postPostApproveReport.html


org.owasp.csrfguard.unprotected.savefFinalizeWorkLocation=/rgsa/savefFinalizeWorkLocation.html
org.owasp.csrfguard.unprotected.fetchFinalizeWorkLocationGPs=/rgsa/fetchFinalizeWorkLocationGPs.html



#CBDetailActivityGPs
org.owasp.csrfguard.unprotected.saveCapacitybuildGPs=/rgsa/saveCapacitybuildGPs.html
org.owasp.csrfguard.unprotected.fetchCapacityBuildingActivityGPs=/rgsa/fetchCapacityBuildingActivityGPs.html
org.owasp.csrfguard.unprotected.fetchDistrictsbyStateCode=/rgsa/fetchDistrictsbyStateCode.html
org.owasp.csrfguard.unprotected.fetchAllState=/rgsa/fetchAllState.html


#EnablementGPs
org.owasp.csrfguard.unprotected.fetchEEnablemenEntityList=/rgsa/fetchEEnablemenEntityList.html
org.owasp.csrfguard.unprotected.saveEnablemenGPs=/rgsa/saveEnablemenGPs.html
org.owasp.csrfguard.unprotected.fetchEEnablementGPs=/rgsa/fetchEEnablementGPs.html
org.owasp.csrfguard.unprotected.fetchEEnablementMasterList=/rgsa/fetchEEnablementMasterList.html
#QPrIncomeEnhancement
org.owasp.csrfguard.unprotected.incomeEnhancementQuaterly=/rgsa/incomeEnhancementQuaterly.html
org.owasp.csrfguard.unprotected.qprCapacityBuilding=/rgsa/qprCapacityBuilding.html

org.owasp.csrfguard.unprotected.saveQprCapacityBuilding=/rgsa/saveQprCapacityBuilding.html
#Gram Panchayat Progress Report
org.owasp.csrfguard.unprotected.fetchGpBhawanStatus=/rgsa/fetchGpBhawanStatus.html
org.owasp.csrfguard.unprotected.gramPanchayatProgressReport=/rgsa/gramPanchayatProgressReport.html
org.owasp.csrfguard.unprotected.fetchGpBhawanData=/rgsa/fetchGpBhawanData.html
org.owasp.csrfguard.unprotected.saveQprPanchayatBhawanData=/rgsa/saveQprPanchayatBhawanData.html
org.owasp.csrfguard.unprotected.fetchDataAccordingToQuator=/rgsa/fetchDataAccordingToQuator.html
org.owasp.csrfguard.unprotected.uploadImage=/rgsa/uploadImage.html
org.owasp.csrfguard.unprotected.findImage=/rgsa/findImage.html
org.owasp.csrfguard.unprotected.findNew=/rgsa/findNew.html
org.owasp.csrfguard.unprotected.docs=/rgsa/docs.html






#institutionalInfraProgressReport fetchDetailsForInstitutionalInfraProgressReport fetchInstInfraStateData 
org.owasp.csrfguard.unprotected.institutionalInfraQuaterlyReport=/rgsa/institutionalInfraQuaterlyReport.html
org.owasp.csrfguard.unprotected.fetchDetailsForInstInfraProgressReport=/rgsa/fetchDetailsForInstInfraProgressReport.html
org.owasp.csrfguard.unprotected.fetchInstInfraStateData=/rgsa/fetchInstInfraStateData.html
org.owasp.csrfguard.unprotected.fetchInstInfraStatus=/rgsa/fetchInstInfraStatus.html
org.owasp.csrfguard.unprotected.saveQprInstitutionalInfrastructureData=/rgsa/saveQprInstitutionalInfrastructureData.html
org.owasp.csrfguard.unprotected.fetchDataAccordingToQuatorInstInfra=/rgsa/fetchDataAccordingToQuatorInstInfra.html


#Added by Ajit 
org.owasp.csrfguard.unprotected.addCms=/rgsa/addCms.html
org.owasp.csrfguard.unprotected.manageCms=/rgsa/manageCms.html
org.owasp.csrfguard.unprotected.modifyCms=/rgsa/modifyCms.html
org.owasp.csrfguard.unprotected.downloadNew1=/rgsa/downloadNew1.html
org.owasp.csrfguard.unprotected.downloadNew=/rgsa/downloadNew.html

#RGSA DOC
org.owasp.csrfguard.unprotected.aboutGPDP=/rgsa/aboutGPDP.html
org.owasp.csrfguard.unprotected.aboutRGSA=/rgsa/aboutRGSA.html

#MOPR
org.owasp.csrfguard.unprotected.getAllSubmittedPlanByStatebyStatus=/rgsa/getAllSubmittedPlanByStatebyStatus.html
org.owasp.csrfguard.unprotected.statuswisePlanDetails=/rgsa/statuswisePlanDetails.html
org.owasp.csrfguard.unprotected.fetchStatewiseEntitiesCount=/rgsa/fetchStatewiseEntitiesCount.html
org.owasp.csrfguard.unprotected.fetchSanctionOrderData=/rgsa/fetchSanctionOrderData.html
org.owasp.csrfguard.unprotected.downloadSanctionOrder=/rgsa/downloadSanctionOrder.html

# Dashboard Data routes
org.owasp.csrfguard.unprotected.downloadSanctionOrder=/rgsa/downloadSanctionOrder.html
org.owasp.csrfguard.unprotected.dashboardBasicInformation=/rgsa/dashboardBasicInformation.html

# Actions: Responding to Attacks
#
# The actions directive (org.owasp.csrfguard.action.*) gives the user the ability to specify one or more
# actions that should be invoked when a CSRF attack is detected. Every action must implement the
# org.owasp.csrfguard.action.IAction interface either directly or indirectly through the
# org.owasp.csrfguard.action.AbstractAction helper class. Many actions accept parameters that can be specified
# along with the action class declaration. These parameters are consumed at runtime and impact the behavior of
# the associated action.
#
# The syntax for defining and configuring CSRFGuard actions is relatively straight forward. Let us assume we wish
# to redirect the user to a default page when a CSRF attack is detected. A redirect action already exists within
# the CSRFGuard bundle and is available via the class name org.owasp.csrfguard.actions.Redirect. In order to enable
# this action, we capture the following declaration in the Owasp.CsrfGuard.properties file:
#
# syntax: org.owasp.csrfguard.action.[actionName]=[className]
# example: org.owasp.csrfguard.action.class.Redirect=org.owasp.csrfguard.actions.Redirect
#
# The aforementioned directive declares an action called "Redirect" (i.e. [actionName]) referencing the Java class
# "org.owasp.csrfguard.actions.Redirect" (i.e. [className]). Anytime a CSRF attack is detected, the Redirect action
# will be executed. You may be asking yourself, "but how do I specify where the user is redirected?"; this is where
# action parameters come into play. In order to specify the redirect location, we capture the following declaration
# in the Owasp.CsrfGuard.properties file:
#
# syntax: org.owasp.csrfguard.action.[actionName].[parameterName]=[parameterValue]
# example: org.owasp.csrfguard.action.Redirect.ErrorPage=/error.html
#
# The aforementioned directive declares an action parameter called "ErrorPage" (i.e. [parameterName]) with the value
# of "/error.html" (i.e. [parameterValue]) for the action "Redirect" (i.e. [actionName]). The
# Redirect action expects the "ErrorPage" parameter to be defined and will redirect the user to this location when
# an attack is detected.
#
#org.owasp.csrfguard.action.Empty=org.owasp.csrfguard.action.Empty
org.owasp.csrfguard.action.Log=org.owasp.csrfguard.action.Log
org.owasp.csrfguard.action.Log.Message=potential cross-site request forgery (CSRF) attack thwarted (user:%user%, ip:%remote_ip%, uri:%request_uri%, error:%exception_message%)
#org.owasp.csrfguard.action.Invalidate=org.owasp.csrfguard.action.Invalidate
org.owasp.csrfguard.action.Redirect=org.owasp.csrfguard.action.Redirect
org.owasp.csrfguard.action.Redirect.Page=/rgsa/error.htm
#org.owasp.csrfguard.action.RequestAttribute=org.owasp.csrfguard.action.RequestAttribute
#org.owasp.csrfguard.action.RequestAttribute.AttributeName=Owasp_CsrfGuard_Exception_Key
org.owasp.csrfguard.action.Rotate=org.owasp.csrfguard.action.Rotate
#org.owasp.csrfguard.action.SessionAttribute=org.owasp.csrfguard.action.SessionAttribute
#org.owasp.csrfguard.action.SessionAttribute.AttributeName=Owasp_CsrfGuard_Exception_Key

# Token Name
#
# The token name property (org.owasp.csrfguard.TokenName) defines the name of the HTTP parameter
# to contain the value of the OWASP CSRFGuard token for each request. The following configuration
# snippet sets the CSRFGuard token parameter name to the value OWASP_CSRFTOKEN:
#
# org.owasp.csrfguard.TokenName=OWASP_CSRFTOKEN
org.owasp.csrfguard.TokenName=OWASP_CSRFTOKEN

# Session Key
#
# The session key property (org.owasp.csrfguard.SessionKey) defines the string literal used to save
# and lookup the CSRFGuard token from the session. This value is used by the filter and the tag
# libraries to retrieve and set the token value in the session. Developers can use this key to
# programmatically lookup the token within their own code. The following configuration snippet sets
# the session key to the value OWASP_CSRFTOKEN:
#
# org.owasp.csrfguard.SessionKey=OWASP_CSRFTOKEN
org.owasp.csrfguard.SessionKey=OWASP_CSRFTOKEN

# Token Length
#
# The token length property (org.owasp.csrfguard.TokenLength) defines the number of characters that
# should be found within the CSRFGuard token. Note that characters are delimited by dashes (-) in groups
# of four. For cosmetic reasons, users are encourage to ensure the token length is divisible by four.
# The following configuration snippet sets the token length property to 32 characters:
#
# org.owasp.csrfguard.TokenLength=32
org.owasp.csrfguard.TokenLength=32

# Pseudo-random Number Generator
#
# The pseudo-random number generator property (org.owasp.csrfguard.PRNG) defines what PRNG should be used
# to generate the OWASP CSRFGuard token. Always ensure this value references a cryptographically strong
# pseudo-random number generator algorithm. The following configuration snippet sets the pseudo-random number
# generator to SHA1PRNG:
#
# org.owasp.csrfguard.PRNG=SHA1PRNG
org.owasp.csrfguard.PRNG=SHA1PRNG